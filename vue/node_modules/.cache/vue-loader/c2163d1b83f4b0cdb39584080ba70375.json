{"remainingRequest":"C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\src\\views\\user\\children\\Published.vue?vue&type=style&index=0&id=59823858&scoped=true&lang=less&","dependencies":[{"path":"C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\src\\views\\user\\children\\Published.vue","mtime":1708736693120},{"path":"C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\19799\\Desktop\\校园跑腿系统\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGVudCB7CiAgICBiYWNrZ3JvdW5kOiAjRkZmOwogICAgbWFyZ2luOiAwIDE1cHg7CiAgICBwYWRkaW5nOiAxNXB4Owp9Cg=="},{"version":3,"sources":["Published.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqPA;AACA;AACA;AACA;AACA","file":"Published.vue","sourceRoot":"src/views/user/children","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <el-card class=\"box-card\">\r\n            <div slot=\"header\" class=\"clearfix\">\r\n                <span>已发布任务</span>\r\n            </div>\r\n            <el-card class=\"box-card\" v-for=\"item in tasks\" style=\"margin-top: 20px\">\r\n                <div slot=\"header\" class=\"clearfix\"\r\n                     style=\"display: flex; align-items: center; justify-content: space-between\">\r\n                        <span style=\"display: flex;align-items: center\">\r\n                            <el-tag :type=\"item.state == 0 ? 'danger':(item.state == 1 ? 'warning':'success')\"\r\n                                    style=\"margin-right: 5px\">{{item.state == 0 ? '待解决':(item.state == 1 ? '服务中':'已完成')}}</el-tag>\r\n                            {{item.taskTitle}}\r\n                        </span>\r\n                    \r\n                    <!-- 评价按钮 -->\r\n                    <el-button v-show=\"item.state == 2\"\r\n                    style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"remark()\">订单评价</el-button>\r\n\r\n\r\n                    <el-button style=\"float: right; padding: 3px 0\" type=\"text\" v-show=\"item.state != 0\"\r\n                               @click=\"receiver(item)\">查看接受人信息\r\n                    </el-button>\r\n                    <template>\r\n<!--                        <i class=\"el-icon-edit\" style=\"cursor: pointer; color: #66b1ff\" v-show=\"item.state == 0\"/>-->\r\n                        <el-popconfirm title=\"确定取消任务吗？\" @confirm=\"cancel(item.id)\" v-show=\"item.state == 0\">\r\n                            <el-button style=\"float: right; padding: 3px 0\" type=\"text\" slot=\"reference\">取消任务\r\n                            </el-button>\r\n                        </el-popconfirm>\r\n                    </template>\r\n                </div>\r\n\r\n                <el-steps :active=\"item.state + 1\" finish-status=\"success\">\r\n                    <el-step title=\"发布成功\" :description=\"item.createTime | formatDate\"></el-step>\r\n                    <el-step title=\"服务中\" :description=\"item.orderTime ? transform(item.orderTime):'暂时没人服务'\"></el-step>\r\n                    <el-step title=\"完成时间\" :description=\"item.endTime ? transform(item.endTime):''\"></el-step>\r\n                </el-steps>\r\n\r\n                <el-collapse style=\"margin-top: 20px\" v-model=\"activeNames\">\r\n                    <el-collapse-item title=\"任务内容\" name=\"1\">\r\n                        <div>{{item.taskContext}}</div>\r\n                    </el-collapse-item>\r\n                    <el-collapse-item title=\"任务奖励\" name=\"2\">\r\n                        <div><i class=\"el-icon-money\" style=\"color: red;\"> {{item.reward}}元</i></div>\r\n                    </el-collapse-item>\r\n                    <el-collapse-item title=\"发布时间\" name=\"3\">\r\n                        <div>{{item.createTime | formatDate}}</div>\r\n                    </el-collapse-item>\r\n                </el-collapse>\r\n\r\n                <el-button type=\"primary\" style=\"float: right;margin:10px 0;\" @click=\"completeTask(item.id)\"\r\n                           v-show=\"item.state==1\">完成任务\r\n                </el-button>\r\n\r\n            </el-card>\r\n            <div style=\"text-align: center\" v-if=\"tasks.length == 0\">\r\n                <span><i class=\"el-icon-refresh-right\"></i>暂无发布任务</span>\r\n            </div>\r\n        </el-card>\r\n\r\n        <el-drawer\r\n                title=\"接受人信息\"\r\n                :visible.sync=\"drawer\"\r\n                direction=\"rtl\">\r\n            <div class=\"content_drawer\">\r\n                <el-card class=\"box-card\" v-if=\"recipientInformation != ''\">\r\n                    <el-collapse v-model=\"drawerNames\">\r\n                        <el-collapse-item title=\"姓名\" name=\"1\">\r\n                            <div>{{recipientInformation.username}}</div>\r\n                        </el-collapse-item>\r\n                        <el-collapse-item title=\"电话\" name=\"2\">\r\n                            <div>{{recipientInformation.phone}}</div>\r\n                        </el-collapse-item>\r\n                        <el-collapse-item title=\"学校\" name=\"3\">\r\n                            <div>{{recipientInformation.school.name}}</div>\r\n                        </el-collapse-item>\r\n                        <el-collapse-item title=\"所在系\" name=\"4\">\r\n                            <div>{{recipientInformation.dept.name}}</div>\r\n                        </el-collapse-item>\r\n                        <el-collapse-item title=\"所在班级\" name=\"5\">\r\n                            <div>{{recipientInformation.aclass.name}}</div>\r\n                        </el-collapse-item>\r\n                    </el-collapse>\r\n                </el-card>\r\n            </div>\r\n        </el-drawer>\r\n\r\n        <!-- 添加或修改remark对话框 -->\r\n        <el-dialog :title=\"title\" v-for=\"item in tasks\" :visible.sync=\"open\"  width=\"500px\" append-to-body>\r\n        <el-form ref=\"form\" :model=\"form\"  :rules=\"rules\" label-width=\"80px\" >\r\n            <el-form-item label=\"星级\" prop=\"star\">\r\n                <el-rate\r\n                    v-model=\"form.star\"\r\n                    show-text>\r\n                </el-rate>\r\n            </el-form-item>\r\n            <el-form-item label=\"评价内容\" prop=\"remark\">\r\n            <el-input v-model=\"form.remark\" placeholder=\"请输入评价内容\" />\r\n            </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button type=\"primary\" @click=\"submitForm(item)\">确 定</el-button>\r\n            <el-button @click=\"exit\">取 消</el-button>\r\n        </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {mapState} from \"vuex\"\r\n    import {formatDate} from '@/util/date';\r\n    import { addRemark, } from \"@/api/remark/remark\";\r\n\r\n    export default {\r\n        name: \"Published\",\r\n        data() {\r\n            return {\r\n                // 是否显示弹出层\r\n                open: false,\r\n                activeNames: ['1', '2', '3'],\r\n                drawerNames: ['1', '2', '3', '4', '5'],\r\n                tasks: [],\r\n                drawer: false,\r\n                recipientInformation: [],\r\n                // 表单参数\r\n                form: {},\r\n                // 表单校验\r\n                rules: {\r\n                },\r\n                // 弹出层标题\r\n                title: \"\",     \r\n            };\r\n        },\r\n        computed: {\r\n            ...mapState('user', ['user'])\r\n        },\r\n        created() {\r\n            this.retrieveData()\r\n        },\r\n        methods: {\r\n            retrieveData() {\r\n                this.$get(\"/task/published\", {id: this.user.id}).then(res => {\r\n                    console.log(res.data.task)\r\n                    this.tasks = res.data.task\r\n                })\r\n            },\r\n            receiver(val) {\r\n                console.log(val)\r\n                this.recipientInformation = val.accept;\r\n                // console.log(this.recipientInformation)\r\n                this.drawer = true\r\n            },\r\n\r\n            transform(time) {\r\n                let date = new Date(time);\r\n                return formatDate(date, 'yyyy-MM-dd hh:mm');\r\n            },\r\n\r\n            cancel(id) {\r\n                this.$del(\"/task/\" + id)\r\n                    .then(res => {\r\n                        this.retrieveData()\r\n                        this.$notifyMsg('成功', res.data.msg, \"success\");\r\n                    })\r\n            },\r\n            completeTask(id) {\r\n                this.$msgbox({\r\n                    title: '提示',\r\n                    message: '确定接受人完成此任务了吗？',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    beforeClose: ((action, instance, done) => {\r\n                        if (action == 'confirm') {\r\n                            // instance.confirmButtonLoading = true;\r\n                            instance.confirmButtonText = '执行中...';\r\n                            this.$put('task/' + id)\r\n                                .then((res) => {\r\n                                    done();\r\n                                    instance.confirmButtonLoading = false;\r\n                                    this.$msg(res.data.msg, \"success\");\r\n                                    this.retrieveData()\r\n                                })\r\n                        } else {\r\n                            done();\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                })\r\n            },\r\n            // 评价用户\r\n            remark(){\r\n                this.open = true;\r\n                this.title = \"添加评价\";\r\n            },\r\n\r\n            /** 提交按钮 */\r\n            submitForm(val) {\r\n                if(this.form.star==null){\r\n                    this.$message(\"请输入星级\");\r\n                }else if(this.form.remark==null){\r\n                    this.$message(\"请输入评价内容\");\r\n                }else{\r\n                    const aid = val.accept.id;\r\n                    const taskid = val.id;\r\n                    const pid = val.publish.id;\r\n                    console.log(aid,taskid,pid);\r\n                    addRemark(  { \r\n                                    \"star\": this.form.star,\r\n                                    \"remark\": this.form.remark,\r\n                                    \"acceptId\": aid,\r\n                                    \"publishId\": pid,\r\n                                    \"taskId\": taskid,\r\n                                }).then(response => {\r\n                        this.$message(\"新增成功\");\r\n                        this.open = false;\r\n                    });\r\n                }  \r\n            },\r\n\r\n            // 取消按钮\r\n            exit() {\r\n            this.open = false;\r\n            this.reset();\r\n            },\r\n\r\n            // 表单重置\r\n            reset() {\r\n            this.form = {\r\n                id: null,\r\n                star: null,\r\n                remark: null,\r\n            };\r\n            },\r\n        },\r\n        filters: {\r\n            formatDate(time) {\r\n                let date = new Date(time);\r\n                return formatDate(date, 'yyyy-MM-dd hh:mm');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n    .content {\r\n        background: #FFf;\r\n        margin: 0 15px;\r\n        padding: 15px;\r\n    }\r\n</style>\r\n"]}]}